- hosts: package_servers
  vars:
    groonga_admin_version: 0.9.5
  become: yes
  tasks:
    # Base
    - name: Upgrade packages
      apt:
        update_cache=yes
        cache_valid_time=3600
        upgrade=safe
    - name: Install base packages
      apt: name={{ item }}
      with_items:
        - acpid
        - apg
        - apt-listchanges
        - cron
        - git
        - logrotate
        - lv
        - vim
        - zsh
    - name: Use VIM as the default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
    - name: Use e-mail for apt-listchanges
      copy:
        src=etc/apt/listchanges.conf
        dest=/etc/apt/listchanges.conf

    # User
    - name: Create "packages" user
      user: name=packages
    - name: Create directories
      file:
        path=~packages/{{ item }}
        state=directory
        owner=packages
        group=packages
      with_items:
        - bin/
        - public/
    - name: Put ~packages/.forward
      copy:
        content="packages@groonga.org"
        dest=~packages/.forward
        owner=packages
        group=packages
    - name: Create ~packages/.ssh/
      file:
        path=~packages/.ssh
        state=directory
        owner=packages
        group=packages
        mode=0700
    - name: Put ~packages/.ssh/authorized_keys
      copy:
        src=home/packages/.ssh/authorized_keys
        dest=~packages/.ssh/authorized_keys
        owner=packages
        group=packages
        mode=0600
    - name: Put ~packages/windows/groonga/.htaccess
      copy:
        src=home/packages/windows/groonga/.htaccess
        dest=~packages/windows/groonga/.htaccess
        owner=packages
        group=packages
        mode=0644

    # Let's encrypt
    - name: Install certbot
      apt:
        name: certbot
    - name: "Check Let's Encrypt certificate"
      stat:
        path: /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem
      register: certificate
    - name: "Stop Apache before initializing Let's Encrypt certificate"
      service:
        name: apache2
        state: stopped
      when: not certificate.stat.exists
    - name: "Initialize Let's Encrypt certificate"
      shell: |
        certbot certonly \
          --standalone \
          --non-interactive \
          --agree-tos \
          --email groonga@groonga.org \
          --domain {{ inventory_hostname }}
      when: not certificate.stat.exists
    - name: "Put Let's Encrypt update script"
      copy:
        src: etc/letsencrypt/renewal-hooks/{{ item }}
        dest: /etc/letsencrypt/renewal-hooks/{{ item }}
        mode: 0700
      with_items:
        - pre/stop-apache2
        - post/start-apache2

    # Apache
    - name: Install Apache
      apt: name=apache2
    - name: Put Apache configuration
      copy:
        src: "{{ item }}"
        dest: /{{ item }}
      with_items:
        - etc/apache2/sites-available/packages.groonga.org.conf
    - name: Enable our Apache configuration
      command: a2ensite packages.groonga.org
    - name: Disable default Apache configuration
      command: a2dissite 000-default
      notify:
        - Restart Apache
    - name: Enable Apache modules
      command: a2enmod {{ item }}
      with_items:
        - ssl
      notify:
        - Restart Apache
    - name: Set log rotation
      copy:
        src: etc/logrotate.d/apache2
        dest: /etc/logrotate.d/apache2

    # Postfix
    - name: Install Postfix
      apt: name=postfix
    - name: Set /etc/aliases
      copy:
        src=etc/aliases
        dest=/etc/aliases
      notify:
        - Update /etc/aliases
    - name: Set /etc/mailname
      copy:
        content="packages.groonga.org"
        dest=/etc/mailname
    - name: Put Postfix configuration
      copy:
        src=etc/postfix/main.cf
        dest=/etc/postfix/main.cf
      notify:
        - Restart Postfix

    # # Groonga
    # - name: Enable Groonga APT repository
    #   apt_repository:
    #     repo: ppa:groonga/ppa
    # - name: Install groonga-httpd
    #   apt: name={{ item }}
    #   with_items:
    #     - groonga-bin
    #     - groonga-httpd
    # - name: Download Groonga Admin
    #   get_url:
    #     url=https://packages.groonga.org/source/groonga-admin/groonga-admin-{{ groonga_admin_version }}.tar.gz
    #     dest=/usr/local/src/
    # - name: Install Groonga Admin
    #   unarchive:
    #     copy=no
    #     src=/usr/local/src/groonga-admin-{{ groonga_admin_version }}.tar.gz
    #     dest=/usr/local/share/
    # - name: Put groonga-httpd configuration
    #   template:
    #     src=etc/groonga/httpd/groonga-httpd.conf.j2
    #     dest=/etc/groonga/httpd/groonga-httpd.conf
    #   notify:
    #     - Restart Groonga

    # # Fluentd
    # - name: Install GPG key of Fluentd APT repository
    #   apt_key:
    #     url=http://packages.treasuredata.com/GPG-KEY-td-agent
    # - name: Install Fluentd APT repository
    #   apt_repository:
    #     repo="deb [arch=amd64] http://packages.treasuredata.com/2/ubuntu/trusty/ trusty contrib"
    # - name: Install Fluentd
    #   apt: name={{ item }}
    #   with_items:
    #     - td-agent
    # - name: Install Fluentd plugins
    #   gem:
    #     executable=/usr/sbin/td-agent-gem
    #     name={{ item }}
    #     state=latest
    #     user_install=no
    #   with_items:
    #     - fluent-plugin-anonymizer
    #     - fluent-plugin-groonga
    #     - fluent-plugin-parser
    #   notify:
    #     - Restart Fluentd
    # - name: Add "td-agent" user to "adm" groups
    #   user:
    #     name=td-agent
    #     groups=adm
    # - name: Create directories
    #   file:
    #     path={{ item }}
    #     state=directory
    #     owner=td-agent
    #     group=td-agent
    #   with_items:
    #     - /var/spool/td-agent/
    #     - /var/spool/td-agent/buffer/
    # - name: Ensure salt for fluent-plugin-anonymizer
    #   shell: apg -a 1 -n 1 -m 20 > /etc/td-agent/anonymizer-salt.txt
    #   args:
    #     creates: /etc/td-agent/anonymizer-salt.txt
    # - name: Set permission for salt file
    #   file:
    #     path=/etc/td-agent/anonymizer-salt.txt
    #     mode=0600
    #     owner=td-agent
    #     group=td-agent
    # - name: Put fluentd.conf
    #   copy:
    #     src=etc/td-agent/td-agent.conf
    #     dest=/etc/td-agent/td-agent.conf
    #   notify:
    #     - Restart Fluentd

  handlers:
    - name: Restart Apache
      service: name=apache2 state=restarted
    - name: Update /etc/aliases
      command: postalias /etc/aliases
    - name: Restart Postfix
      service: name=postfix state=restarted
    - name: Restart Groonga
      service:
        name: groonga-httpd
        state: restarted
        enabled: yes
    - name: Restart Fluentd
      service: name=td-agent state=restarted

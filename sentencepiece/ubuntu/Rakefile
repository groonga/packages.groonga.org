require "rake"
require "octokit"
require "open-uri"

UBUNTU_CODE_NAMES = "xenial,bionic,disco"
UBUNTU_VERSIONS = "16.04,18.04,19.04"
PACKAGE = "sentencepiece"
LAUNCHPAD_PPA = "groonga-ppa"

client = Octokit::Client.new
releases = client.releases("google/sentencepiece")
current_release = releases.first
version = current_release.tag_name.sub(/v/, "")
archive_name = "#{PACKAGE}-#{version}-Source.tar.xz"

desc "Download SentencePiece source packages"
task :download do
  download_url_base = "https://github.com/google/sentencepiece/releases/download"
  download_url = "#{download_url_base}/#{current_release.tag_name}/#{archive_name}"
  puts "Download #{download_url}"
  open(download_url) do |downloaded_file|
    open("#{archive_name}", "wb") do |output_file|
      IO.copy_stream(downloaded_file, output_file)
    end
  end
end

desc "Upload SentencePiece source packages"
task :upload do
  upload_script = ENV["UPLOAD_SCRIPT_PATH"]
  unless upload_script
    raise "Set UPLOAD_SCRIPT_PATH (e.g. $HOME/work/groonga/groonga/packages/ubuntu/upload.rb)"
  end

  pgp_sign_key = ENV["LAUNCHPAD_UPLOADER_PGP_KEY"]
  unless pgp_sign_key
    raise "Set LAUNCHPAD_UPLOADER_PGP_KEY for signing"
  end
  sh(upload_script,
     "--package", PACKAGE,
     "--version", version,
     "--source-archive", archive_name,
     "--ubuntu-code-names", UBUNTU_CODE_NAMES,
     "--ubuntu-versions", UBUNTU_VERSIONS,
     "--debian-directory", "../debian/",
     "--ppa", LAUNCHPAD_PPA,
     "--pgp-sign-key", pgp_sign_key)
end
